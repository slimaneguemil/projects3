---
influxdb_host: "influx.cloudalchemy.org"
influxdb_db: cloudalchemy
influxdb_user: prometheus
influxdb_password: "password"

prometheus_web_external_url: "http://{{ ansible_host }}:9090"
prometheus_storage_retention: "14d"

# prometheus_remote_write:
#   - url: "http://{{ influxdb_host }}:8086/api/v1/prom/write?db={{ influxdb_db }}"
#     basic_auth:
#       username: "{{ influxdb_user }}"
#       password: "{{ influxdb_password }}"
#     write_relabel_configs:
#       - source_labels: ['__name__']
#         regex: 'node_load1'
#         action: keep
# 
# prometheus_remote_read:
#   - url: "http://{{ influxdb_host }}:8086/api/v1/prom/read?db={{ influxdb_db }}"
#     basic_auth:
#       username: "{{ influxdb_user }}"
#       password: "{{ influxdb_password }}"
#     read_recent: false
#     required_matchers:
#       job: "node"

prometheus_alertmanager_config:
  - scheme: http
    static_configs:
      - targets:
        - "{{ ansible_host }}:9093"

prometheus_targets:
  node:
    - targets:
        "{{ groups['all'] | map('extract', hostvars, ['ansible_host']) | map('regex_replace', '$', ':9100') | list }}"
      labels:
        env: demo
  alertmanager:
    - targets:
      - "{{ ansible_host }}:9093"
      labels:
        env: demo
  grafana:
    - targets:
      - "{{ ansible_host }}:3000"
      labels:
        env: demo
#  docker:
#    - targets:
#        "{{ groups['influxdb'] | map('extract', hostvars, ['ansible_host']) | map('regex_replace', '$', ':8080') | list }}"
#      labels:
#        env: demo
#  netdata:
#    - targets:
#      - "london.my-netdata.io"
#      - "atlanta.my-netdata.io"
#      - "sanfrancisco.my-netdata.io"
#      - "toronto.my-netdata.io"
#      - "bangalore.my-netdata.io"
#      - "singapore.my-netdata.io"
#      - "newyork.my-netdata.io"
#      - "frankfurt.my-netdata.io"
#      - "octopuscs.my-netdata.io"
#      - "ventureer.my-netdata.io"
#      - "stackscale.my-netdata.io"
#      labels:
#        env: netdata-demo

prometheus_scrape_configs:
- job_name: "prometheus"
  metrics_path: "/metrics"
  static_configs:
  - targets:
    - "{{ ansible_host }}:9090"
- job_name: "random"
  metrics_path: "/metrics"
  static_configs:
  - targets:
    - "{{ ansible_host }}:8999"
- job_name: "caddy"
  metrics_path: "/metrics"
  static_configs:
  - targets:
    - "localhost:9180"
- job_name: "node"
  file_sd_configs:
  - files:
    - "/etc/prometheus/file_sd/node.yml"
- job_name: "alertmanager"
  file_sd_configs:
  - files:
    - "/etc/prometheus/file_sd/alertmanager.yml"
- job_name: "grafana"
  file_sd_configs:
  - files:
    - "/etc/prometheus/file_sd/grafana.yml"
#- job_name: "docker"
#  file_sd_configs:
#  - files:
#    - "/etc/prometheus/file_sd/docker.yml"
- job_name: 'blackbox'
  metrics_path: /probe
  params:
    module: [http_2xx]
  static_configs:
    - targets:
      - "http://{{ ansible_host }}:9100"
  relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: 127.0.0.1:9115  # Blackbox exporter.
#- job_name: 'influxdb'
#  metrics_path: /metrics
#  static_configs:
#    - targets:
#      - "{{ influxdb_host }}:8086"

alertmanager_external_url: "http://{{ ansible_host }}:9093"
alertmanager_slack_api_url: "http://example.org"
alertmanager_receivers:
- name: slack
  slack_configs:
  - send_resolved: true
    channel: '#alerts'
alertmanager_route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 30s
  group_interval: 5m
  repeat_interval: 4h
  receiver: slack

grafana_security:
  admin_user: admin
  admin_password: "password"

grafana_auth:
  anonymous:
    org_name: "Main Org."
    org_role: Viewer

grafana_datasources:
  - name: "Prometheus"
    type: "prometheus"
    access: "proxy"
    url: "http://{{ ansible_host }}:9090"
    isDefault: true
grafana_dashboards:
  - dashboard_id: '1860'
    revision_id: '12'
    datasource: '{{ grafana_datasources.0.name }}'
  - dashboard_id: '3662'
    revision_id: '2'
    datasource: '{{ grafana_datasources.0.name }}'
  - dashboard_id: '4271'
    revision_id: '4'
    datasource: '{{ grafana_datasources.0.name }}'
