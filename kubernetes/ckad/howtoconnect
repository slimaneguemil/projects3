A bastion host is provided for connecting to the master and nodes in the private subnet. This is the EC2 instance you will SSH into. It will have the name bastion-host in the EC2 instances list. All the instances are running Ubuntu 16.04 Linux. Therefore, you will use the SSH user name ubuntu when you log in to the bastion host with SSH.

There are a few options for managing the cluster:

    SSH into the master node through the bastion host and use kubectl on the master. SSH agent forwarding makes this easy to accomplish.
    Run kubectl on the bastion host, and configure it to connect to the API server on the master
    Use proxy mode of kubectl to access the API server through the bastion host from clients outside of the VPC
    Access the Kubernetes API server through a load balancer

Initially, you will use SSH agent forwarding to connect to the master in this Lab. With SSH agent forwarding, you can use your local SSH keys to connect to the master from the bastion instead of copying your key to the bastion and connecting with the copied key. Later on, you will set up proxy mode. You need to connect to the master to copy the kubectl configuration file to the node you want to set up the proxy. Using proxy mode is preferred to avoid unintended configuration changes on the master host server.


ssh-add -k *.pem
ssh -A ubuntu@BASTION_IP
scp -o "ForwardAgent yes" ubuntu@master_ip:~/kubeconfig ~/.kube/config

Connecting using Linux/macOS

Linux distributions and macOS include an SSH client that accepts standard PEM keys. Complete the following steps to connect using the included terminal applications:

a. Open your terminal application. If you need assistance finding the terminal application, search for "terminal" using your operating system's application finder or search commands.



b. Enter the following to make sure the read-only permissions are correct on the PEM key file:

chmod 400 /Path/To/Your/KeyPair.pem



c. Enter the following command to add private keys to the authentication agent:

ssh-add -k /Path/To/Your/KeyPair.pem



d. Issue the following command to connect to the remote host using SSH:

ssh -A AMIUserName@YourIPv4Address

where the command details are:

    ssh initiates the SSH connection.
    -A specifies to use agent forwarding.
    AMIUserName specifies the SSH user:
        For the Amazon Linux Amazon Machine Image (AMI), a standard SSH user is ec2-user.
        For Ubuntu images, a standard SSH user is ubuntu.
        For CentOS images, a standard SSH user is centos.
        For Debian images, a standard SSH user is admin.
        For Red Hat 6.4 and later images, a standard SSH user is ec2-user.
    YourIPv4Address is the IPv4 address noted earlier in the instructions.



e.  After successfully connecting to the virtual machine, you should reach a terminal prompt similar to the one shown in the following image:

Note: If you receive a warning that the host is unknown, enter y or yes to add the host and complete the connection.